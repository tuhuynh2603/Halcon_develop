#pragma once

//#define OUT_MOTOR_CURTAIN_SENSOR 0x01
enum TrackCommand
{
	NO_COMMAND,
	TEACH,
	INSPECT,
	INSPECT_ALL,
	CALIBRATE,
	CALIBRATE_LIGHT,
	CLAMP_SEQUENCE,
	UNCLAMP_SEQUENCE,
	BARCODE_SEQUENCE,
	SAVE_ALL_IMAGES,
	KILL_CMD_THREAD,
};





#define UPDATE_WATCHDOG			 11
#define UPDATE_LOTCHANGEDACK	 12

//defnitions for EventLog
#define EVENT_LOG				0
#define COMM_LOG				1
#define MOTION_LOG				2
#define LIGHT_LOG				3


#define WM_USER_SET_DATA				WM_USER+51
#define WM_USER_ON_SELECTION_CANCEL	WM_USER+52
#define WM_USER_ON_SELECTION_OK		WM_USER+53
#define WM_USER_ON_NEW_SELECTION		WM_USER+54

#define WM_OPTICS_SETPARM			WM_USER+55
#define WM_OPTICS_REFRESHGRAPH		WM_USER+56
#define WM_SETSMSTATUS				WM_USER+57
#define WM_AUDITTRAIL_UPDATE		WM_USER+80
#define WM_SHOW_MOTORINITIALIZING	WM_USER+81
#define WM_LOAD_RECIPE				WM_USER+59
#define WM_SEND_LIGHTVALUE			WM_USER+60
#define WM_SHOW_DEBUG				WM_USER+61
#define WM_HIDE_PANES				WM_USER+62
#define WM_SET_ONLINE_STATUS		WM_USER+63
#define WM_SET_CUR_POS_PARAM_DISP   WM_USER+64
#define WM_SET_FULLSCREEN		    WM_USER+65
#define WM_ADD_EVENT_LOG		    WM_USER+66
#define WM_SET_RECIPE_NAME		    WM_USER+67
#define WM_LOAD_SINGLE_FOV_RECIPE	WM_USER+68

//definition for io status Module 1

namespace IoSignal
{
	enum ModuleId
	{
		MODULE_1 = 1,
		MODULE_2 = 2,
		MODULE_3 = 3
	};

	enum Status
	{
		OFF = 0,
		ON = 1
	};

	enum ModuleInput1
	{
		GRIPPER_DOWN_STATUS = 0,
		GRIPPED_UP_STATUS = 1,
		PULL_SENSOR_STATUS = 2,
		JAM_SENSOR_STATUS = 3,
		CLAMP1_SENSOR_STATUS = 4,
		CLAMP2_SENSOR_STATUS = 5,
		PRESENT_SENSOR_STATUS = 6,
		DOOR_SWITCH_STATUS = 7,
		WIDTH_ADJUSTMENT_CRASH_STATUS = 8,
		AIR_PRESSURE_STATUS = 9,
		EMERGENCY_STATUS = 10,
		START_BUTTON_STATUS = 11,
		CYCLE_STOP_BUTTON_STATUS = 12,
		STOP_BUTTON_STATUS = 13,
		VACUUM_SWITCH_ON_STATUS = 14,
		VACUUM_UP_STATUS = 15
	}; 

	enum ModuleOutput1
	{
		GRIPPER_UP = 0,
		GRIPPER_DOWN = 1,
		GRIPPER_CLAMP = 2,
		CLAMP1_UP = 3,
		CLAMP1_DOWN = 4,
		START_LAMP_ON = 5,
		STOP_LAMP_ON = 6,
		RESET_LAMP_ON = 7,
		VACUUM_ON = 8,
		PURGE_ON = 9,
		VACUUM_UP = 10,
		CLAMP2_UP = 11,
		CLAMP2_DOWN = 12,
		CYCLE_STOP_LAMP_ON = 13,
		LOADER_READY_TO_RECEIVE = 14,
		LOADER_TRANSFER_SUCCESS = 15

		// not in use = 13,
		// not in use = 14,
		// not in use = 15
	};

	enum ModuleInput2
	{
		RESET_BUTTON_STATUS = 0,
		GUARD_HEALTHY_STATUS = 1,
		IONIZER_ERROR_STATUS = 2,
		GUARD_BYPASS_STATUS = 3,
		LOADER_PANEL_AVAILABLE_STATUS = 4,
		LOADER_PANEL_IN_STATUS = 5,
		UNLOADER_READY_TO_RECEIVE_STATUS = 6,
		UNLOADER_TRANSFER_SUCCESS_STATUS = 7
		// not in use = 8,
		// not in use = 9,
		// not in use = 10,
		// not in use = 11,
		// not in use = 12,
		// not in use = 13,
		// not in use = 14,
		// not in use = 15,
	};

	enum ModuleOutput2
	{
		TOWER_GREEN_LIGHT_ON = 0,
		TOWER_ORANGE_LIGHT_ON = 1,
		TOWER_RED_LIGHT_ON = 2,
		TOWER_BLUE_LIGHT_ON = 3,
		SWITCH_ON_BUZZER = 4,
		IONIZER_VALVE_ON = 5,
		IONIZER_DIS_STOP = 6,
		IONIZER_MAINTENANCE_SIGNAL = 7,
		GUARD_DOOR_LOCK = 8,
		UNLOADER_PANEL_AVAILABLE = 9,
		UNLOADER_PANEL_PUSH_OUT_ON = 10,
		// not in use = 11,
		K1_K2_CTRL = 12,
		K3_K4_CTRL = 13,
		// not in use = 14,
		// not in use = 15
	};

};

//definition for FAILEDQR_RETURNCODE
#define CONTINUE_SEQUENCE						0x0
#define NEXT_STRIP_SEQUENCE						0x1
#define AFTER_UNLOAD_STRIP_SEQUENCE				0x2				
#define ABORT_LOGIN_STRIP_SEQUENCE				0x3
#define ABORT_INPUT_BARCODE_SEQUENCE			0x4
#define STOP_MACHINE_SEQUENCE					0x-1

